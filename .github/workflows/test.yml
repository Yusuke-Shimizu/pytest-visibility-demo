name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-github-actions-annotate-failures
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    
    - name: Run pytest and generate report
      run: |
        pytest --junitxml=pytest-report.xml --tb=short --color=yes -v --durations=10
    
    - name: Display test summary
      if: always()
      run: |
        echo "## Test Results Summary (Python ${{ matrix.python-version }})" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f pytest-report.xml ]; then
          echo "✅ JUnit XML report generated successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Parse JUnit XML and create table using external script
          python3 scripts/parse_test_results.py >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📊 Detailed report available in artifacts" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ JUnit XML report not found" >> $GITHUB_STEP_SUMMARY
        fi
    
    - name: Upload test report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: pytest-report-python-${{ matrix.python-version }}
        path: pytest-report.xml
    
